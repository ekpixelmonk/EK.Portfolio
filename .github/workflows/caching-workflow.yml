name: CI with Dependency Caching

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  build-with-cache:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Caches NuGet packages to speed up future runs.
      - name: Cache NuGet packages
        id: nuget-cache # An ID is needed to reference the output of this step.
        uses: actions/cache@v4
        with:
          # The folder to cache on the virtual runner. For NuGet, this is the default path.
          path: ~/.nuget/packages
          # The key for saving and restoring the cache.
          # It includes the OS, a hash of your solution file, and your requested string.
          # When the solution file changes, the hash changes, creating a new cache.
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.sln') }}-cache-5314cf0

      # This step echoes the cache hit/miss result, as requested.
      - name: prime-cache-5314cf0
        run: echo "The cache-hit status is: ${{ steps.nuget-cache.outputs.cache-hit }}"

      # Set up the .NET SDK environment.
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' # Or your project's .NET version

      # This step only runs if the cache was not restored.
      - name: Restore dependencies
        if: steps.nuget-cache.outputs.cache-hit != 'true'
        run: dotnet restore

      # Build the project. The '--no-restore' flag is used because dependencies
      # are either restored from the cache or in the previous step.
      - name: Build
        run: dotnet build --no-restore